{
  "name": "Generic Design Patterns",
  "tagline": "A library providing the most common design patterns.",
  "body": "# Why Using Design Patterns?\r\nSoftware design patterns are reuseable templates or solutions for recurring problems. Those patterns describe a proper way to solve common problems when desinging your program.\r\n\r\n# Design Patterns Exemplification\r\nA library providing some generic design patterns. Obviously it contains only a small amount of commonly known design patterns. Not every single pattern can be implemented in a generic way.\r\n\r\nSo far it provides the following design patterns that can easily be included in any source code: \r\n\r\n- Memento pattern \r\n- Composite pattern \r\n- Builder pattern \r\n- Singleton pattern\r\n\r\n# Examples and Validations\r\nEach generic implementation of the listed design patterns comes along with junit test cases and demos showing the usage of the associated pattern. All those files can be found in the 'example' and 'test' folders.\r\n\r\n# Authors and Contributors\r\nThe author Yannick Drost (@yannickdrost) is responsible for the associated content.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}